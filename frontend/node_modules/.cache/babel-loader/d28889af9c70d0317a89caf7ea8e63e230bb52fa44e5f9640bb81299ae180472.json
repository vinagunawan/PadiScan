{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\62851\\\\OneDrive\\\\Dokumen\\\\TUGAS SEMESTER 7\\\\Proyek Integrasi Sistem\\\\frontend\\\\src\\\\components\\\\Diagnosis.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Webcam from 'react-webcam';\nimport { Box, Button, Typography, Card, CardContent, Input } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Diagnosis() {\n  _s();\n  const [isCameraOpen, setIsCameraOpen] = useState(false); // Untuk membuka/menutup kamera\n  const [image, setImage] = useState(null); // Menyimpan gambar yang dipilih/tangkap\n  const [file, setFile] = useState(null); // Menyimpan file gambar yang diunggah\n  const webcamRef = React.useRef(null);\n\n  // Fungsi untuk menangkap foto dari kamera\n  const capturePhoto = () => {\n    const photo = webcamRef.current.getScreenshot();\n    setImage(photo);\n    setIsCameraOpen(false); // Menutup kamera setelah foto diambil\n  };\n\n  // Fungsi untuk menangani unggahan gambar dari file\n  const handleFileChange = event => {\n    const file = event.target.files[0]; // Mengambil file gambar yang dipilih\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setFile(reader.result); // Menyimpan gambar ke state\n      setImage(reader.result); // Menampilkan gambar yang diunggah\n    };\n    if (file) {\n      reader.readAsDataURL(file); // Membaca file gambar sebagai URL data\n    }\n  };\n\n  // Fungsi untuk mengirim gambar ke backend untuk diagnosis\n  const handleSubmit = () => {\n    // Kirim gambar ke backend untuk diagnosis (menggunakan fetch atau axios)\n    fetch('/api/diagnose', {\n      method: 'POST',\n      body: JSON.stringify({\n        image: image\n      }),\n      // Mengirim gambar sebagai data JSON\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      // Menampilkan hasil diagnosis\n      alert(`Diagnosis: ${data.diagnosis}\\nPenanganan: ${data.treatment}`);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      minHeight: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 400,\n        padding: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [image ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: \"Captured or Uploaded\",\n          style: {\n            width: '100%',\n            borderRadius: '8px',\n            marginBottom: '16px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this) : isCameraOpen ? /*#__PURE__*/_jsxDEV(Webcam, {\n          ref: webcamRef,\n          screenshotFormat: \"image/jpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: \"Unggah atau tangkap foto untuk diagnosis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 2,\n            mt: 2\n          },\n          children: [!isCameraOpen && !image && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => setIsCameraOpen(true),\n              children: \"Buka Kamera\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              component: \"label\",\n              htmlFor: \"file-input\",\n              children: [\"Unggah Gambar\", /*#__PURE__*/_jsxDEV(Input, {\n                type: \"file\",\n                id: \"file-input\",\n                accept: \"image/*\",\n                hidden: true,\n                onChange: handleFileChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), isCameraOpen && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: capturePhoto,\n            children: \"Tangkap Foto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), image && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleSubmit,\n            children: \"Kirim untuk Diagnosis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Diagnosis, \"s5KyOrDJpy3gDxRH8B8WcdW/KOw=\");\n_c = Diagnosis;\nexport default Diagnosis;\nvar _c;\n$RefreshReg$(_c, \"Diagnosis\");","map":{"version":3,"names":["React","useState","Webcam","Box","Button","Typography","Card","CardContent","Input","jsxDEV","_jsxDEV","Fragment","_Fragment","Diagnosis","_s","isCameraOpen","setIsCameraOpen","image","setImage","file","setFile","webcamRef","useRef","capturePhoto","photo","current","getScreenshot","handleFileChange","event","target","files","reader","FileReader","onloadend","result","readAsDataURL","handleSubmit","fetch","method","body","JSON","stringify","headers","then","response","json","data","alert","diagnosis","treatment","sx","minHeight","display","flexDirection","justifyContent","alignItems","children","maxWidth","padding","src","alt","style","width","borderRadius","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","ref","screenshotFormat","variant","gap","mt","onClick","component","htmlFor","type","id","accept","hidden","onChange","_c","$RefreshReg$"],"sources":["C:/Users/62851/OneDrive/Dokumen/TUGAS SEMESTER 7/Proyek Integrasi Sistem/frontend/src/components/Diagnosis.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport { Box, Button, Typography, Card, CardContent, Input } from '@mui/material';\r\n\r\nfunction Diagnosis() {\r\n  const [isCameraOpen, setIsCameraOpen] = useState(false); // Untuk membuka/menutup kamera\r\n  const [image, setImage] = useState(null); // Menyimpan gambar yang dipilih/tangkap\r\n  const [file, setFile] = useState(null); // Menyimpan file gambar yang diunggah\r\n  const webcamRef = React.useRef(null);\r\n\r\n  // Fungsi untuk menangkap foto dari kamera\r\n  const capturePhoto = () => {\r\n    const photo = webcamRef.current.getScreenshot();\r\n    setImage(photo);\r\n    setIsCameraOpen(false); // Menutup kamera setelah foto diambil\r\n  };\r\n\r\n  // Fungsi untuk menangani unggahan gambar dari file\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0]; // Mengambil file gambar yang dipilih\r\n    const reader = new FileReader();\r\n\r\n    reader.onloadend = () => {\r\n      setFile(reader.result); // Menyimpan gambar ke state\r\n      setImage(reader.result); // Menampilkan gambar yang diunggah\r\n    };\r\n    if (file) {\r\n      reader.readAsDataURL(file); // Membaca file gambar sebagai URL data\r\n    }\r\n  };\r\n\r\n  // Fungsi untuk mengirim gambar ke backend untuk diagnosis\r\n  const handleSubmit = () => {\r\n    // Kirim gambar ke backend untuk diagnosis (menggunakan fetch atau axios)\r\n    fetch('/api/diagnose', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ image: image }), // Mengirim gambar sebagai data JSON\r\n      headers: { 'Content-Type': 'application/json' },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Menampilkan hasil diagnosis\r\n        alert(`Diagnosis: ${data.diagnosis}\\nPenanganan: ${data.treatment}`);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        minHeight: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <Card sx={{ maxWidth: 400, padding: 2 }}>\r\n        <CardContent>\r\n          {image ? (\r\n            <img\r\n              src={image}\r\n              alt=\"Captured or Uploaded\"\r\n              style={{ width: '100%', borderRadius: '8px', marginBottom: '16px' }}\r\n            />\r\n          ) : isCameraOpen ? (\r\n            <Webcam ref={webcamRef} screenshotFormat=\"image/jpeg\" />\r\n          ) : (\r\n            <Typography variant=\"body2\">Unggah atau tangkap foto untuk diagnosis</Typography>\r\n          )}\r\n\r\n          <Box sx={{ display: 'flex', gap: 2, mt: 2 }}>\r\n            {!isCameraOpen && !image && (\r\n              <>\r\n                <Button variant=\"contained\" onClick={() => setIsCameraOpen(true)}>\r\n                  Buka Kamera\r\n                </Button>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  component=\"label\"\r\n                  htmlFor=\"file-input\"\r\n                >\r\n                  Unggah Gambar\r\n                  <Input\r\n                    type=\"file\"\r\n                    id=\"file-input\"\r\n                    accept=\"image/*\"\r\n                    hidden\r\n                    onChange={handleFileChange}\r\n                  />\r\n                </Button>\r\n              </>\r\n            )}\r\n\r\n            {isCameraOpen && (\r\n              <Button variant=\"contained\" onClick={capturePhoto}>\r\n                Tangkap Foto\r\n              </Button>\r\n            )}\r\n\r\n            {image && (\r\n              <Button variant=\"contained\" onClick={handleSubmit}>\r\n                Kirim untuk Diagnosis\r\n              </Button>\r\n            )}\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Diagnosis;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}