{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\62851\\\\OneDrive\\\\Dokumen\\\\TUGAS SEMESTER 7\\\\Proyek Integrasi Sistem\\\\frontend\\\\src\\\\components\\\\Diagnosis.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Webcam from 'react-webcam';\nimport { Box, Button, Typography, Card, CardContent } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Diagnosis() {\n  _s();\n  const [isCameraOpen, setIsCameraOpen] = useState(false);\n  const [image, setImage] = useState(null);\n  const webcamRef = React.useRef(null);\n  const capturePhoto = () => {\n    const photo = webcamRef.current.getScreenshot();\n    setImage(photo);\n    setIsCameraOpen(false);\n  };\n  const handleSubmit = () => {\n    // Kirim gambar ke backend untuk prediksi\n    fetch('/api/diagnose', {\n      method: 'POST',\n      body: JSON.stringify({\n        image\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      // Tampilkan hasil prediksi\n      alert(`Diagnosis: ${data.diagnosis}\\nPenanganan: ${data.treatment}`);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      minHeight: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 400,\n        padding: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [image ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: \"Captured\",\n          style: {\n            width: '100%',\n            borderRadius: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this) : isCameraOpen ? /*#__PURE__*/_jsxDEV(Webcam, {\n          ref: webcamRef,\n          screenshotFormat: \"image/jpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: \"Unggah atau tangkap foto untuk diagnosis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 2,\n            mt: 2\n          },\n          children: [!isCameraOpen && !image && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: () => setIsCameraOpen(true),\n            children: \"Buka Kamera\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), isCameraOpen && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: capturePhoto,\n            children: \"Tangkap Foto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), image && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleSubmit,\n            children: \"Kirim untuk Diagnosis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Diagnosis, \"mLp2/Wq4LiG5LuoC7bytDSUixSM=\");\n_c = Diagnosis;\nexport default Diagnosis;\nvar _c;\n$RefreshReg$(_c, \"Diagnosis\");","map":{"version":3,"names":["React","useState","Webcam","Box","Button","Typography","Card","CardContent","jsxDEV","_jsxDEV","Diagnosis","_s","isCameraOpen","setIsCameraOpen","image","setImage","webcamRef","useRef","capturePhoto","photo","current","getScreenshot","handleSubmit","fetch","method","body","JSON","stringify","headers","then","response","json","data","alert","diagnosis","treatment","sx","minHeight","display","flexDirection","justifyContent","alignItems","children","maxWidth","padding","src","alt","style","width","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","ref","screenshotFormat","variant","gap","mt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/62851/OneDrive/Dokumen/TUGAS SEMESTER 7/Proyek Integrasi Sistem/frontend/src/components/Diagnosis.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport { Box, Button, Typography, Card, CardContent } from '@mui/material';\r\n\r\nfunction Diagnosis() {\r\n  const [isCameraOpen, setIsCameraOpen] = useState(false);\r\n  const [image, setImage] = useState(null);\r\n  const webcamRef = React.useRef(null);\r\n\r\n  const capturePhoto = () => {\r\n    const photo = webcamRef.current.getScreenshot();\r\n    setImage(photo);\r\n    setIsCameraOpen(false);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // Kirim gambar ke backend untuk prediksi\r\n    fetch('/api/diagnose', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ image }),\r\n      headers: { 'Content-Type': 'application/json' },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Tampilkan hasil prediksi\r\n        alert(`Diagnosis: ${data.diagnosis}\\nPenanganan: ${data.treatment}`);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        minHeight: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <Card sx={{ maxWidth: 400, padding: 2 }}>\r\n        <CardContent>\r\n          {image ? (\r\n            <img src={image} alt=\"Captured\" style={{ width: '100%', borderRadius: '8px' }} />\r\n          ) : isCameraOpen ? (\r\n            <Webcam ref={webcamRef} screenshotFormat=\"image/jpeg\" />\r\n          ) : (\r\n            <Typography variant=\"body2\">Unggah atau tangkap foto untuk diagnosis</Typography>\r\n          )}\r\n\r\n          <Box sx={{ display: 'flex', gap: 2, mt: 2 }}>\r\n            {!isCameraOpen && !image && (\r\n              <Button variant=\"contained\" onClick={() => setIsCameraOpen(true)}>\r\n                Buka Kamera\r\n              </Button>\r\n            )}\r\n            {isCameraOpen && (\r\n              <Button variant=\"contained\" onClick={capturePhoto}>\r\n                Tangkap Foto\r\n              </Button>\r\n            )}\r\n            {image && (\r\n              <Button variant=\"contained\" onClick={handleSubmit}>\r\n                Kirim untuk Diagnosis\r\n              </Button>\r\n            )}\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Diagnosis;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}